"""Definitive schema reset-account

Revision ID: 9b0e6092f17c
Revises: 
Create Date: 2025-09-14 20:13:18.047122

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9b0e6092f17c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('cpf', sa.String(length=11), nullable=False),
    sa.Column('birthDate', sa.Date(), nullable=False),
    sa.Column('user_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_person_cpf'), 'person', ['cpf'], unique=True)
    op.create_index(op.f('ix_person_id'), 'person', ['id'], unique=False)
    op.create_table('account',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('dailyWithdrawLimit', sa.Float(), nullable=True),
    sa.Column('flActive', sa.Boolean(), nullable=True),
    sa.Column('accountType', sa.Enum('CURRENT_ACCOUNT', 'SAVING_ACCOUNT', 'SALARY_ACCOUNT', 'PAYMENT_ACCOUNT', name='accounttype'), nullable=True),
    sa.Column('person_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('person_id')
    )
    op.create_index(op.f('ix_account_id'), 'account', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), autoincrement=True, nullable=False),
    sa.Column('date_time', sa.DateTime(), nullable=False),
    sa.Column('money', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('transaction_type', sa.Enum('DEPOSIT', 'WITHDRAW', name='transactiontype'), nullable=False),
    sa.Column('account_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.Column('origin_account_id', sa.BigInteger().with_variant(sa.INTEGER(), 'sqlite'), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['origin_account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_index(op.f('ix_account_id'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_person_id'), table_name='person')
    op.drop_index(op.f('ix_person_cpf'), table_name='person')
    op.drop_table('person')
    op.drop_table('user')
    # ### end Alembic commands ###
